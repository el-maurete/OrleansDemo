{"version":3,"sources":["./src/app/signal-r.service.ts","./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as signalR from \"@microsoft/signalr\";\r\n\r\nexport interface AssetModel {\r\n  name: string;\r\n  colour: string;\r\n  reason: string;\r\n  badge: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignalRService {\r\n  public data: AssetModel[];\r\n  private hubConnection: signalR.HubConnection;\r\n\r\n  constructor() {\r\n    this.hubConnection = new signalR\r\n      .HubConnectionBuilder()\r\n      .withUrl('https://localhost:5001/updatesHub')\r\n      .withAutomaticReconnect()\r\n      .build();\r\n    this.data = [];\r\n  }\r\n\r\n  public startConnection = () => {\r\n    this.hubConnection\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .then(() => console.log('Connection started'))\r\n      .catch(err => console.log('Error while starting connection: ' + err))\r\n  }\r\n\r\n  public subscribeToUpdates = () => {\r\n    this.hubConnection.on('assetownerupdate', (updates) => {\r\n      var asset = updates as AssetModel;\r\n      console.log(\"assetownerupdate:\");\r\n      console.log(updates);\r\n      var assets = this.data\r\n        .filter(a => a.name === asset.name);\r\n\r\n      if (assets.length == 0) {\r\n        updates.badge = 1;\r\n        updates.isBadgeVisible = true;\r\n        this.data.push(updates);\r\n      }\r\n      else\r\n        assets.forEach(a => {\r\n          a.colour = asset.colour;\r\n          a.reason = asset.reason;\r\n          a.badge = a.badge ? a.badge + 1 : 1;\r\n        });\r\n    });\r\n  }\r\n\r\n  public resetBadge = (asset: any) => {\r\n    var assets = this.data\r\n      .filter(a => a.name === asset.name)\r\n      .forEach(a => {\r\n        a.badge = 0;\r\n      });\r\n  }  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<mat-grid-list cols=\"3\" rowHeight=\"7:2\">\r\n  <mat-grid-tile *ngFor='let asset of signalRService.data'>\r\n    <mat-card (click)=\"resetBadge(asset)\">\r\n      <mat-card-header\r\n        [class]=\"asset.colour\"\r\n        [matBadge]=\"asset.badge\"\r\n        [matBadgeHidden]=\"asset.badge == 0\"\r\n        matBadgePosition=\"after\">\r\n        <mat-card-title>{{asset.name}}</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <p>{{asset.reason}}</p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </mat-grid-tile>\r\n</mat-grid-list>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SignalRService, AssetModel } from './signal-r.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    public title: string;\r\n  \r\n    constructor(\r\n      public signalRService: SignalRService,\r\n      private http: HttpClient)\r\n    {\r\n      this.title = \"Demo SignalR\";\r\n    }\r\n  \r\n    ngOnInit() {\r\n      this.signalRService.startConnection();\r\n      this.signalRService.subscribeToUpdates();\r\n      this.startHttpRequest();\r\n    }\r\n  \r\n    public resetBadge(asset: any) {\r\n      this.signalRService.resetBadge(asset)\r\n    }\r\n\r\n    private startHttpRequest = () => {\r\n      this.http.get('https://localhost:5001/assetOwners')\r\n        .subscribe(res => {\r\n          this.signalRService.data = res as AssetModel[];\r\n          console.log(\"asset owners:\")\r\n          console.log(res);\r\n        })\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatBadgeModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}